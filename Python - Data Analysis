1. **What are the main data structures in Python, and how do you choose between them?**
   (Discuss lists, tuples, dictionaries, sets, and when to use each)

2. **How do you handle missing data in a Pandas DataFrame?**
   (Explain methods like `dropna()`, `fillna()`, `interpolate()`)

3. **Explain the difference between the .loc[] and .iloc[] indexers in Pandas.**

4. **How would you merge two DataFrames in Pandas?**
   (Discuss `merge()`, `join()`, and different join types)

5. **What are the main functions in NumPy?**
   (Mention functions like `np.array()`, `np.mean()`, `np.sum()`, `np.sqrt()`)

6. **How would you plot a simple line chart using Matplotlib?**

7. **What is the difference between Pandas' Series and DataFrame?**

8. **How would you handle categorical data in a machine learning pipeline?**
   (Discuss techniques like one-hot encoding and label encoding)

9. **Explain the train-test split and its importance in machine learning.**

10. **What is the purpose of feature scaling in machine learning?**
    (Discuss techniques like StandardScaler and MinMaxScaler)

11. **How would you handle an imbalanced dataset in a classification problem?**
    (Mention techniques like oversampling, undersampling, or using class weights)

12. **Explain the difference between L1 and L2 regularization in machine learning.**

13. **What is the purpose of the `groupby()` function in Pandas?**
    (Discuss grouping and aggregating data)

14. **How would you handle large datasets that don't fit into memory?**
    (Mention techniques like chunking, online learning, or out-of-core processing)

15. **What are some common data cleaning tasks in Python?**
    (Discuss handling missing values, removing duplicates, dealing with outliers, etc.)
.............................................................................................
.............................................................................................

def compareTriplets(a, b):
    # Write your code here
    t1=t2=0
    for i in range(len(a)):
        if a[i] > b[i]:
            t1 +=1
        elif a[i]<b[i]:
            t2 +=1 
            
    return [t1,t2]
            
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    a = list(map(int, input().rstrip().split()))

    b = list(map(int, input().rstrip().split()))

    result = compareTriplets(a, b)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()

....................................
def diagonalDifference(arr):
    # Write your code here
    
    o1 = 0 
    o2 = 0 
    l = len(arr)
    for i in range(l):
        o1 += arr[i][i]
        o2 += arr[i][l-1-i]
        
    return abs(o1 -o2)
        
          
    # for i in range(len(arr)-1,-1,-1):
    #     for j in 
        

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = []

    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))

    result = diagonalDifference(arr)

    fptr.write(str(result) + '\n')

    fptr.close()

def gradingStudents(grades):
    # Write your code here
    l = len(grades)
    for i in range(l):
        if grades[i] >=38 and grades[i] % 5>2:
            grades[i] = (grades[i] // 5 ) * 5 + 5
            
    return grades



